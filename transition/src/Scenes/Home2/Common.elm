module Scenes.Home2.Common exposing (Model, nullModel, initModel)

{-| Common module

This module is generated by Messenger, don't modify this.

@docs Model, nullModel, initModel

-}

import Lib.Env.Env exposing (Env, addCommonData)
import Lib.Scene.Base exposing (LayerPacker, SceneInitData(..))
import Scenes.Home2.LayerBase exposing (CommonData, nullCommonData)
import Scenes.Home2.LayerSettings exposing (LayerT)
import Scenes.Home2.Main.Export as Main
import Scenes.Home2.Main.Global as MainG
import Scenes.Home2.SceneInit exposing (initCommonData, nullHome2Init)


{-| Model
-}
type alias Model =
    LayerPacker CommonData LayerT


{-| nullModel
-}
nullModel : Model
nullModel =
    { commonData = nullCommonData
    , layers = []
    }


{-| Initialize the model
-}
initModel : Env -> SceneInitData -> Model
initModel env init =
    let
        layerInitData =
            case init of
                Home2InitData x ->
                    x

                _ ->
                    nullHome2Init
    in
    { commonData = initCommonData env layerInitData
    , layers =
        [ MainG.getLayerT <| Main.initLayer (addCommonData nullCommonData env) layerInitData
        ]
    }
