module SceneProtos.CoreEngine.GameComponent.Base exposing
    ( GameComponent, GameComponentTarget(..)
    , GameComponentMsg(..)
    , Data
    , GameComponentInitData(..)
    )

{-|


# GameComponent

This is generated by Mesenger.

@docs GameComponent, GameComponentTarget
@docs GameComponentMsg
@docs Data
@docs GameComponentInitData

-}

import Canvas exposing (Renderable)
import Dict exposing (Dict)
import Lib.Component.Base exposing (DefinedTypes)
import Lib.Env.Env exposing (EnvC)
import Messenger.GeneralModel exposing (GeneralModel)
import SceneProtos.CoreEngine.GameComponents.Bullet.Base exposing (Bullet)
import SceneProtos.CoreEngine.GameComponents.Enemy.Base exposing (Enemy)
import SceneProtos.CoreEngine.GameComponents.Ship.Base exposing (Ship)
import SceneProtos.CoreEngine.LayerBase exposing (CommonData)


{-| GameComponent Definition
-}
type alias GameComponent =
    GeneralModel Data (EnvC CommonData) GameComponentMsg GameComponentTarget (List ( Renderable, Int ))


{-| GameComponent Target
-}
type GameComponentTarget
    = GCParent
    | GCById Int
    | GCByName String


{-| Messages for GameComponent
-}
type GameComponentMsg
    = GCNewBulletMsg Bullet
    | GCCollisionMsg String
    | GCGameOverMsg
    | NullGCMsg


{-| Add your data here!
-}
type alias Data =
    { uid : Int
    , position : ( Float, Float )
    , velocity : Float
    , collisionBox : ( Float, Float )
    , alive : Bool
    , extra : Dict String DefinedTypes
    }


{-| GC init data, don't modify this by hand!
-}
type GameComponentInitData
    = GCIdData Int GameComponentInitData
    | GCBulletInitData Bullet
    | GCEnemyInitData Enemy
    | GCShipInitData Ship
    | NullGCInitData
